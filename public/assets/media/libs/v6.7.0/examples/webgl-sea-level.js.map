{"version":3,"file":"webgl-sea-level.js","mappings":"sJAMMA,EAAM,oCAKNC,EAAY,IAAI,IAAU,CAC9BC,QAAS,GACTC,OAAQ,IAAI,IAAI,CACdC,IACE,kEAAoEJ,EACtEK,QAAS,GACTC,SAAU,IACVC,YAAa,cAEfC,MAAO,CACLC,UAAW,CACTC,MAAO,GAETC,MAAO,CACL,cACA,CAAC,UAID,CACE,KACC,IACD,CACE,IACA,KACA,CACE,IACA,CAAC,IAAK,MAAW,CAAC,OAAQ,IAC1B,CAAC,IAAK,CAAC,IAAK,IAAK,CAAC,OAAQ,IAAK,CAAC,OAAQ,OAK9C,CAAC,MAAO,SACR,CAAC,IAAK,IAAK,IAAK,GAChB,CAAC,IAAK,IAAM,CAAC,MAAO,UACpB,CAAC,IAAK,IAAK,IAAK,OAKhBC,EAAM,IAAI,IAAI,CAClBC,OAAQ,MACRC,OAAQ,CACN,IAAI,IAAU,CACZX,OAAQ,IAAI,IAAI,CACdC,IAAK,6DAA+DJ,EACpEe,aAlDN,4LAmDMR,YAAa,YACbD,SAAU,QAGdL,GAEFe,KAAM,IAAI,KAAK,CACbC,QAAQ,QAAW,EAAE,SAAU,UAC/BC,KAAM,OAIJC,EAAUC,SAASC,eAAe,SAClCC,EAASF,SAASC,eAAe,UACvCF,EAAQI,iBAAiB,SAAS,WAChCD,EAAOE,UAAYL,EAAQM,MAC3BxB,EAAUyB,qBAAqB,CAAChB,MAAOiB,WAAWR,EAAQM,YAE5DH,EAAOE,UAAYL,EAAQM,MAG3B,IADAG,IAAMC,EAAYT,SAASU,uBAAuB,YACzCC,EAAI,EAAGC,EAAKH,EAAUI,OAAQF,EAAIC,IAAMD,EAC/CF,EAAUE,GAAGR,iBAAiB,QAASW,GAGzC,SAASA,EAASC,GAChBP,IAAMQ,EAAOD,EAAMtB,OAAOwB,QACpBrB,EAAOJ,EAAI0B,UACjBtB,EAAKuB,WAAU,QAAWH,EAAKnB,OAAOuB,MAAM,KAAK5B,IAAI6B,UACrDzB,EAAK0B,QAAQD,OAAOL,EAAKlB,U","sources":["webpack:///./webgl-sea-level.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport TileLayer from '../src/ol/layer/WebGLTile.js';\nimport View from '../src/ol/View.js';\nimport XYZ from '../src/ol/source/XYZ.js';\nimport {fromLonLat} from '../src/ol/proj.js';\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\nconst attributions =\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\nconst elevation = new TileLayer({\n  opacity: 0.6,\n  source: new XYZ({\n    url:\n      'https://api.maptiler.com/tiles/terrain-rgb/{z}/{x}/{y}.png?key=' + key,\n    maxZoom: 10,\n    tileSize: 512,\n    crossOrigin: 'anonymous',\n  }),\n  style: {\n    variables: {\n      level: 0,\n    },\n    color: [\n      'interpolate',\n      ['linear'],\n      // band math operates on normalized values from 0-1\n      // so we scale by 255 to align with the elevation formula\n      // from https://cloud.maptiler.com/tiles/terrain-rgb/\n      [\n        '+',\n        -10000,\n        [\n          '*',\n          0.1 * 255,\n          [\n            '+',\n            ['*', 256 * 256, ['band', 1]],\n            ['+', ['*', 256, ['band', 2]], ['band', 3]],\n          ],\n        ],\n      ],\n      // use the `level` style variable as a stop in the color ramp\n      ['var', 'level'],\n      [139, 212, 255, 1],\n      ['+', 0.01, ['var', 'level']],\n      [139, 212, 255, 0],\n    ],\n  },\n});\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new XYZ({\n        url: 'https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?key=' + key,\n        attributions: attributions,\n        crossOrigin: 'anonymous',\n        tileSize: 512,\n      }),\n    }),\n    elevation,\n  ],\n  view: new View({\n    center: fromLonLat([-122.3267, 37.8377]),\n    zoom: 11,\n  }),\n});\n\nconst control = document.getElementById('level');\nconst output = document.getElementById('output');\ncontrol.addEventListener('input', function () {\n  output.innerText = control.value;\n  elevation.updateStyleVariables({level: parseFloat(control.value)});\n});\noutput.innerText = control.value;\n\nconst locations = document.getElementsByClassName('location');\nfor (let i = 0, ii = locations.length; i < ii; ++i) {\n  locations[i].addEventListener('click', relocate);\n}\n\nfunction relocate(event) {\n  const data = event.target.dataset;\n  const view = map.getView();\n  view.setCenter(fromLonLat(data.center.split(',').map(Number)));\n  view.setZoom(Number(data.zoom));\n}\n"],"names":["key","elevation","opacity","source","url","maxZoom","tileSize","crossOrigin","style","variables","level","color","map","target","layers","attributions","view","center","zoom","control","document","getElementById","output","addEventListener","innerText","value","updateStyleVariables","parseFloat","const","locations","getElementsByClassName","i","ii","length","relocate","event","data","dataset","getView","setCenter","split","Number","setZoom"],"sourceRoot":""}